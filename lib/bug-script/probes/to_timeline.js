// Generated by CoffeeScript 2.0.0-beta6
var parseStackTrace, toTimeline;
parseStackTrace = function (stackString) {
  var stack, stackTrace;
  stack = (stackString + '\n').replace(/^\S[^\(]+?[\n$]/gm, '').replace(/^\s+(at eval )?at\s+/gm, '').replace(/^([^\(]+?)([\n$])/gm, '{anonymous}()@$1$2').replace(/^Object.<anonymous>\s*\(([^\)]+)\)/gm, '{anonymous}()@$1').split('\n');
  stack.pop();
  stackTrace = stack.map(function (line) {
    return line.match(/^(.+) \(([^(]+)\:(\d+)\:(\d+)\)$/);
  }).filter(function (m) {
    return null != m;
  }).map(function (param$) {
    var _, cache$, columnNumber, filename, functionName, lineNumber, url;
    {
      cache$ = param$;
      _ = cache$[0];
      functionName = cache$[1];
      filename = cache$[2];
      lineNumber = cache$[3];
      columnNumber = cache$[4];
    }
    url = 'file://' + filename.replace(/(\\)/g, '/');
    return {
      functionName: functionName,
      url: url,
      lineNumber: lineNumber,
      columnNumber: columnNumber
    };
  });
  stackTrace.shift();
  return stackTrace;
};
module.exports = toTimeline = function (type, record) {
  record.type = type;
  if (null != record.startTime)
    record.startTime;
  else
    record.startTime = Date.now();
  if (null != record.endTime)
    record.endTime;
  else
    record.endTime = Date.now();
  record.usedHeapSize = process.memoryUsage().heapUsed;
  if (null != record.stackTrace)
    record.stackTrace;
  else
    record.stackTrace = parseStackTrace(new Error().stack);
  return process.send({
    method: 'Timeline.emit_eventRecorded',
    record: record
  });
};
toTimeline.parseStackTrace = parseStackTrace;
