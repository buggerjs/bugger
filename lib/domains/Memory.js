// Generated by CoffeeScript 2.0.0-beta7
var EventEmitter;
EventEmitter = require('events').EventEmitter;
module.exports = function (agentContext) {
  var Memory;
  Memory = new EventEmitter;
  Memory.getDOMCounters = function (param$, cb) {
    void 0;
  };
  Memory.emit_addNativeSnapshotChunk = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'Memory.addNativeSnapshotChunk'
    };
    return this.emit('notification', notification);
  };
  Memory.MemoryBlock = {
    id: 'MemoryBlock',
    type: 'object',
    properties: [
      {
        name: 'size',
        type: 'number',
        optional: true,
        description: 'Size of the block in bytes if available'
      },
      {
        name: 'name',
        type: 'string',
        description: 'Unique name used to identify the component that allocated this block'
      },
      {
        name: 'children',
        type: 'array',
        optional: true,
        items: { $ref: 'MemoryBlock' }
      }
    ]
  };
  Memory.HeapSnapshotChunk = {
    id: 'HeapSnapshotChunk',
    type: 'object',
    properties: [
      {
        name: 'strings',
        type: 'array',
        items: { type: 'string' },
        description: 'An array of strings that were found since last update.'
      },
      {
        name: 'nodes',
        type: 'array',
        items: { type: 'integer' },
        description: 'An array of nodes that were found since last update.'
      },
      {
        name: 'edges',
        type: 'array',
        items: { type: 'integer' },
        description: 'An array of edges that were found since last update.'
      },
      {
        name: 'baseToRealNodeId',
        type: 'array',
        items: { type: 'integer' },
        description: 'An array of integers for nodeId remapping. Even nodeId has to be mapped to the following odd nodeId.'
      }
    ]
  };
  return Memory;
};
