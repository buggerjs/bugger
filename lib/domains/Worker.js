// Generated by CoffeeScript 2.0.0-beta5
var EventEmitter;
EventEmitter = require('events').EventEmitter;
module.exports = function (agentContext) {
  var Worker;
  Worker = new EventEmitter;
  Worker.enable = function (param$, cb) {
    void 0;
  };
  Worker.disable = function (param$, cb) {
    void 0;
  };
  Worker.sendMessageToWorker = function (param$, cb) {
    var cache$, message, workerId;
    {
      cache$ = param$;
      workerId = cache$.workerId;
      message = cache$.message;
    }
  };
  Worker.canInspectWorkers = function (param$, cb) {
    void 0;
    return cb(null, { result: false });
  };
  Worker.connectToWorker = function (param$, cb) {
    var workerId;
    workerId = param$.workerId;
  };
  Worker.disconnectFromWorker = function (param$, cb) {
    var workerId;
    workerId = param$.workerId;
  };
  Worker.setAutoconnectToWorkers = function (param$, cb) {
    var value;
    value = param$.value;
  };
  Worker.emit_workerCreated = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'Worker.workerCreated'
    };
    return this.emit('notification', notification);
  };
  Worker.emit_workerTerminated = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'Worker.workerTerminated'
    };
    return this.emit('notification', notification);
  };
  Worker.emit_dispatchMessageFromWorker = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'Worker.dispatchMessageFromWorker'
    };
    return this.emit('notification', notification);
  };
  Worker.emit_disconnectedFromWorker = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'Worker.disconnectedFromWorker'
    };
    return this.emit('notification', notification);
  };
  return Worker;
};
