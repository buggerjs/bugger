// Generated by CoffeeScript 2.0.0-beta5
var EventEmitter;
EventEmitter = require('events').EventEmitter;
module.exports = function (agentContext) {
  var HeapProfiler;
  HeapProfiler = new EventEmitter;
  HeapProfiler.hasHeapProfiler = function (param$, cb) {
    void 0;
  };
  HeapProfiler.getProfileHeaders = function (param$, cb) {
    void 0;
  };
  HeapProfiler.getHeapSnapshot = function (param$, cb) {
    var uid;
    uid = param$.uid;
  };
  HeapProfiler.removeProfile = function (param$, cb) {
    var uid;
    uid = param$.uid;
  };
  HeapProfiler.clearProfiles = function (param$, cb) {
    void 0;
  };
  HeapProfiler.takeHeapSnapshot = function (param$, cb) {
    var reportProgress;
    reportProgress = param$.reportProgress;
  };
  HeapProfiler.collectGarbage = function (param$, cb) {
    void 0;
  };
  HeapProfiler.getObjectByHeapObjectId = function (param$, cb) {
    var cache$, objectGroup, objectId;
    {
      cache$ = param$;
      objectId = cache$.objectId;
      objectGroup = cache$.objectGroup;
    }
  };
  HeapProfiler.getHeapObjectId = function (param$, cb) {
    var objectId;
    objectId = param$.objectId;
  };
  HeapProfiler.emit_addProfileHeader = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'HeapProfiler.addProfileHeader'
    };
    return this.emit('notification', notification);
  };
  HeapProfiler.emit_addHeapSnapshotChunk = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'HeapProfiler.addHeapSnapshotChunk'
    };
    return this.emit('notification', notification);
  };
  HeapProfiler.emit_finishHeapSnapshot = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'HeapProfiler.finishHeapSnapshot'
    };
    return this.emit('notification', notification);
  };
  HeapProfiler.emit_resetProfiles = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'HeapProfiler.resetProfiles'
    };
    return this.emit('notification', notification);
  };
  HeapProfiler.emit_reportHeapSnapshotProgress = function (params) {
    var notification;
    notification = {
      params: params,
      method: 'HeapProfiler.reportHeapSnapshotProgress'
    };
    return this.emit('notification', notification);
  };
  HeapProfiler.ProfileHeader = {
    id: 'ProfileHeader',
    type: 'object',
    description: 'Profile header.',
    properties: [
      {
        name: 'title',
        type: 'string',
        description: 'Profile title.'
      },
      {
        name: 'uid',
        type: 'integer',
        description: 'Unique identifier of the profile.'
      },
      {
        name: 'maxJSObjectId',
        type: 'integer',
        optional: true,
        description: 'Last seen JS object Id.'
      }
    ]
  };
  HeapProfiler.HeapSnapshotObjectId = {
    id: 'HeapSnapshotObjectId',
    type: 'string',
    description: 'Heap snashot object id.'
  };
  return HeapProfiler;
};
