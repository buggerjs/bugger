// Generated by CoffeeScript 2.0.0-beta4
var coffee, compile, compileAndBreak, compileFile, compileString, fs, Module;
fs = require('fs');
coffee = require('coffee-script-redux');
Module = require('module');
compileFile = function (filename) {
  var cache$, code, csAst, input, jsAst, map;
  input = fs.readFileSync(filename, 'utf8');
  csAst = coffee.parse(input, { raw: true });
  jsAst = coffee.compile(csAst, { bare: true });
  cache$ = coffee.jsWithSourceMap(jsAst, filename);
  code = cache$.code;
  map = cache$.map;
  Module._sourceMaps[filename] = function () {
    return '' + map;
  };
  code += '\n//@ sourceMappingURL=data:application/json;base64,';
  code += new Buffer('' + map).toString('base64');
  return code += '\n';
};
compile = function (module, filename) {
  var js;
  js = compileFile(filename);
  return module._compile(js, filename);
};
compileString = function (input) {
  var csAst, jsAst;
  csAst = coffee.parse(input, { raw: true });
  jsAst = coffee.compile(csAst, { bare: true });
  return coffee.js(jsAst, { compact: true }).replace(/^\/\/ Generated by .*$/, '');
};
compileAndBreak = function (module, filename) {
  var js;
  js = compileFile(filename);
  js = "console.log('[bugger] Halting execution on first line.'); debugger; " + js;
  return module._compile(js, filename);
};
module.exports = {
  compile: compile,
  compileAndBreak: compileAndBreak,
  compileString: compileString
};
